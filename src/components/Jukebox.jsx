/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useState, useEffect, useRef } from "react"
import { useGLTF } from "@react-three/drei"
import { useFrame, useThree } from "@react-three/fiber"
import * as THREE from 'three'
import { Howl, Howler } from 'howler'
import { gsap } from "gsap/gsap-core"

export default function Jukebox(props) {
  const { nodes, materials } = useGLTF("./jukebox-v4.glb")
  const [ hovered, setHovered ] = useState(false)
  const [ songHovered, setSongHovered ] = useState(false)
  const [ zoomed, setZoomed ] = useState(false)
  const onbutton = useRef()
  const jukeboxYellowLights = useRef()
  const jukeboxRedLights = useRef()
  const [ onButtonActive, setOnButtonActive ] = useState(false)
  const redDetails = useRef()
  const songButton1 = useRef()
  const [ songButton1Active, setSongButton1Active ] = useState(false)
  const songButton2 = useRef()
  const [ songButton2Active, setSongButton2Active ] = useState(false)
  const songButton3 = useRef()
  const [ songButton3Active, setSongButton3Active ] = useState(false)
  const songButton4 = useRef()
  const [ songButton4Active, setSongButton4Active ] = useState(false)
  const songButton5 = useRef()
  const [ songButton5Active, setSongButton5Active ] = useState(false)
  const songButton6 = useRef()
  const [ songButton6Active, setSongButton6Active ] = useState(false)
  const songButton7 = useRef()
  const [ songButton7Active, setSongButton7Active ] = useState(false)
  const songButton8 = useRef()
  const [ songButton8Active, setSongButton8Active ] = useState(false)
  const songButton9 = useRef()
  const [ songButton9Active, setSongButton9Active ] = useState(false)
  const songButton10 = useRef()
  const [ songButton10Active, setSongButton10Active ] = useState(false)
  const songButton11 = useRef()
  const [ songButton11Active, setSongButton11Active ] = useState(false)
  const songButton12 = useRef()
  const [ songButton12Active, setSongButton12Active ] = useState(false)
  const leftNavButton = useRef()
  const rightNavButton = useRef()
  const [ activePanel, setActivePanel ] = useState('left')
  const [ isMobileDevice, setMobileDevice ] = useState(false)
  const [width, setWidth] = useState(window.innerWidth)
  var buttonAudio = new Howl({ src: '/audio/fx/buttonpress.mp3' })
  var lightAudio = new Howl({ src:'/audio/fx/lightson.mp3' })

  useEffect(() => {
      document.body.style.cursor = hovered ? 'pointer' : 'auto' 
  }, [hovered])

  useEffect(() => {
      console.log(width)
      if (width < 768) {
        setMobileDevice(true)
      } else {
        setMobileDevice(false)
      }
      window.addEventListener('resize', handleWindowSizeChange)
      return () => {
          window.removeEventListener('resize', handleWindowSizeChange)
      }
  }, [])

  function handleWindowSizeChange() {
    setWidth(window.innerWidth)
  }

  var rotVar = 0.0

  useFrame((state) => {
    const vec = new THREE.Vector3()
    const rot = new THREE.Quaternion(0, 0, 0,  Math.PI / 2)
    const rotMax = 2.0
    if (zoomed) {
      const step = 0.04
      // state.camera.rotateOnAxis(rot, 2.0)
      
      if (!isMobileDevice) {
        state.camera.position.lerp(vec.set(0.0, 1.00, 1.1, 0.1), step)
      } else {
        if (activePanel === 'left') {
            console.log(activePanel)
            state.camera.position.lerp(vec.set(-0.11, 1.00, 1.1, 0.1), step)
            state.camera.updateProjectionMatrix()
        } else if (activePanel === 'right') {
            console.log(activePanel)
            state.camera.position.lerp(vec.set(0.11, 1.00, 1.1, 0.1), step)
            state.camera.updateProjectionMatrix()
        }
      }
      
      // state.camera.position.lerp(vec.set(-0.11, 1.00, 1.1, 0.1), step)
    }
  })

  function handleSongButtonClick(num) {
    buttonAudio.play()
    switch (num) {
      case(1):
        console.log(songButton1.current.material)
        gsap.to(songButton1.current.material, { emissiveIntensity: 1.5 })
        gsap.to([
          songButton2.current.material, songButton3.current.material, songButton4.current.material, songButton5.current.material,
          songButton6.current.material, songButton7.current.material, songButton8.current.material, songButton9.current.material,
          songButton10.current.material, songButton11.current.material, songButton12.current.material
        ], { emissiveIntensity: 0.0 })
        setSongButton1Active(true)
        setSongButton2Active(false)
        setSongButton3Active(false)
        setSongButton4Active(false)
        setSongButton5Active(false)
        setSongButton6Active(false)
        setSongButton7Active(false)
        setSongButton8Active(false)
        setSongButton9Active(false)
        setSongButton10Active(false)
        setSongButton11Active(false)
        setSongButton12Active(false)
        break
      case(2):
        console.log(songButton2.current)
        gsap.to(songButton2.current.material, { emissiveIntensity: 1.5 })
        gsap.to([
          songButton1.current.material, songButton3.current.material, songButton4.current.material, songButton5.current.material,
          songButton6.current.material, songButton7.current.material, songButton8.current.material, songButton9.current.material,
          songButton10.current.material, songButton11.current.material, songButton12.current.material
        ], { emissiveIntensity: 0.0 })
        setSongButton1Active(false)
        setSongButton2Active(true)
        setSongButton3Active(false)
        setSongButton4Active(false)
        setSongButton5Active(false)
        setSongButton6Active(false)
        setSongButton7Active(false)
        setSongButton8Active(false)
        setSongButton9Active(false)
        setSongButton10Active(false)
        setSongButton11Active(false)
        setSongButton12Active(false)
        break
      case(3):
        console.log(songButton3.current)
        gsap.to(songButton3.current.material, { emissiveIntensity: 1.5 })
        gsap.to([
          songButton1.current.material, songButton2.current.material, songButton4.current.material, songButton5.current.material,
          songButton6.current.material, songButton7.current.material, songButton8.current.material, songButton9.current.material,
          songButton10.current.material, songButton11.current.material, songButton12.current.material
        ], { emissiveIntensity: 0.0 })
        setSongButton1Active(false)
        setSongButton2Active(false)
        setSongButton3Active(true)
        setSongButton4Active(false)
        setSongButton5Active(false)
        setSongButton6Active(false)
        setSongButton7Active(false)
        setSongButton8Active(false)
        setSongButton9Active(false)
        setSongButton10Active(false)
        setSongButton11Active(false)
        setSongButton12Active(false)
        break
      case(4):
        console.log(songButton4.current)
        gsap.to(songButton4.current.material, { emissiveIntensity: 1.5 })
        gsap.to([
          songButton1.current.material, songButton2.current.material, songButton3.current.material, songButton5.current.material,
          songButton6.current.material, songButton7.current.material, songButton8.current.material, songButton9.current.material,
          songButton10.current.material, songButton11.current.material, songButton12.current.material
        ], { emissiveIntensity: 0.0 })
        setSongButton1Active(false)
        setSongButton2Active(false)
        setSongButton3Active(false)
        setSongButton4Active(true)
        setSongButton5Active(false)
        setSongButton6Active(false)
        setSongButton7Active(false)
        setSongButton8Active(false)
        setSongButton9Active(false)
        setSongButton10Active(false)
        setSongButton11Active(false)
        setSongButton12Active(false)
        break
      case(5):
        console.log(songButton5.current)
        gsap.to(songButton5.current.material, { emissiveIntensity: 1.5 })
        gsap.to([
          songButton1.current.material, songButton2.current.material, songButton3.current.material, songButton4.current.material,
          songButton6.current.material, songButton7.current.material, songButton8.current.material, songButton9.current.material,
          songButton10.current.material, songButton11.current.material, songButton12.current.material
        ], { emissiveIntensity: 0.0 })
        setSongButton1Active(false)
        setSongButton2Active(false)
        setSongButton3Active(false)
        setSongButton4Active(false)
        setSongButton5Active(true)
        setSongButton6Active(false)
        setSongButton7Active(false)
        setSongButton8Active(false)
        setSongButton9Active(false)
        setSongButton10Active(false)
        setSongButton11Active(false)
        setSongButton12Active(false)
        break
      case(6):
        console.log(songButton6.current)
        gsap.to(songButton6.current.material, { emissiveIntensity: 1.5 })
        gsap.to([
          songButton1.current.material, songButton2.current.material, songButton3.current.material, songButton4.current.material,
          songButton5.current.material, songButton7.current.material, songButton8.current.material, songButton9.current.material,
          songButton10.current.material, songButton11.current.material, songButton12.current.material
        ], { emissiveIntensity: 0.0 })
        setSongButton1Active(false)
        setSongButton2Active(false)
        setSongButton3Active(false)
        setSongButton4Active(false)
        setSongButton5Active(false)
        setSongButton6Active(true)
        setSongButton7Active(false)
        setSongButton8Active(false)
        setSongButton9Active(false)
        setSongButton10Active(false)
        setSongButton11Active(false)
        setSongButton12Active(false)
        break
      case(7):
        console.log(songButton6.current)
        gsap.to(songButton7.current.material, { emissiveIntensity: 1.5 })
        gsap.to([
          songButton1.current.material, songButton2.current.material, songButton3.current.material, songButton4.current.material,
          songButton5.current.material, songButton6.current.material, songButton8.current.material, songButton9.current.material,
          songButton10.current.material, songButton11.current.material, songButton12.current.material
        ], { emissiveIntensity: 0.0 })
        setSongButton1Active(false)
        setSongButton2Active(false)
        setSongButton3Active(false)
        setSongButton4Active(false)
        setSongButton5Active(false)
        setSongButton6Active(false)
        setSongButton7Active(true)
        setSongButton8Active(false)
        setSongButton9Active(false)
        setSongButton10Active(false)
        setSongButton11Active(false)
        setSongButton12Active(false)
        break
      case(8):
        console.log(songButton6.current)
        gsap.to(songButton8.current.material, { emissiveIntensity: 1.5 })
        gsap.to([
          songButton1.current.material, songButton2.current.material, songButton3.current.material, songButton4.current.material,
          songButton5.current.material, songButton6.current.material, songButton7.current.material, songButton9.current.material,
          songButton10.current.material, songButton11.current.material, songButton12.current.material
        ], { emissiveIntensity: 0.0 })
        setSongButton1Active(false)
        setSongButton2Active(false)
        setSongButton3Active(false)
        setSongButton4Active(false)
        setSongButton5Active(false)
        setSongButton6Active(false)
        setSongButton7Active(false)
        setSongButton8Active(true)
        setSongButton9Active(false)
        setSongButton10Active(false)
        setSongButton11Active(false)
        setSongButton12Active(false)
        break
      case(9):
        console.log(songButton6.current)
        gsap.to(songButton9.current.material, { emissiveIntensity: 1.5 })
        gsap.to([
          songButton1.current.material, songButton2.current.material, songButton3.current.material, songButton4.current.material,
          songButton5.current.material, songButton6.current.material, songButton7.current.material, songButton8.current.material,
          songButton10.current.material, songButton11.current.material, songButton12.current.material
        ], { emissiveIntensity: 0.0 })
        setSongButton1Active(false)
        setSongButton2Active(false)
        setSongButton3Active(false)
        setSongButton4Active(false)
        setSongButton5Active(false)
        setSongButton6Active(false)
        setSongButton7Active(false)
        setSongButton8Active(false)
        setSongButton9Active(true)
        setSongButton10Active(false)
        setSongButton11Active(false)
        setSongButton12Active(false)
        break
      case(10):
        console.log(songButton6.current)
        gsap.to(songButton10.current.material, { emissiveIntensity: 1.5 })
        gsap.to([
          songButton1.current.material, songButton2.current.material, songButton3.current.material, songButton4.current.material,
          songButton5.current.material, songButton6.current.material, songButton7.current.material, songButton8.current.material,
          songButton9.current.material, songButton11.current.material, songButton12.current.material
        ], { emissiveIntensity: 0.0 })
        setSongButton1Active(false)
        setSongButton2Active(false)
        setSongButton3Active(false)
        setSongButton4Active(false)
        setSongButton5Active(false)
        setSongButton6Active(false)
        setSongButton7Active(false)
        setSongButton8Active(false)
        setSongButton9Active(false)
        setSongButton10Active(true)
        setSongButton11Active(false)
        setSongButton12Active(false)
        break
      case(11):
        console.log(songButton6.current)
        gsap.to(songButton11.current.material, { emissiveIntensity: 1.5 })
        gsap.to([
          songButton1.current.material, songButton2.current.material, songButton3.current.material, songButton4.current.material,
          songButton5.current.material, songButton6.current.material, songButton7.current.material, songButton8.current.material,
          songButton9.current.material, songButton10.current.material, songButton12.current.material
        ], { emissiveIntensity: 0.0 })
        setSongButton1Active(false)
        setSongButton2Active(false)
        setSongButton3Active(false)
        setSongButton4Active(false)
        setSongButton5Active(false)
        setSongButton6Active(false)
        setSongButton7Active(false)
        setSongButton8Active(false)
        setSongButton9Active(false)
        setSongButton10Active(false)
        setSongButton11Active(true)
        setSongButton12Active(false)
        break   
      case(12):
        console.log(songButton6.current)
        gsap.to(songButton12.current.material, { emissiveIntensity: 1.5 })
        gsap.to([
          songButton1.current.material, songButton2.current.material, songButton3.current.material, songButton4.current.material,
          songButton5.current.material, songButton6.current.material, songButton7.current.material, songButton8.current.material,
          songButton9.current.material, songButton10.current.material, songButton11.current.material
        ], { emissiveIntensity: 0.0 })
        setSongButton1Active(false)
        setSongButton2Active(false)
        setSongButton3Active(false)
        setSongButton4Active(false)
        setSongButton5Active(false)
        setSongButton6Active(false)
        setSongButton7Active(false)
        setSongButton8Active(false)
        setSongButton9Active(false)
        setSongButton10Active(false)
        setSongButton11Active(false)
        setSongButton12Active(true)
        break
    }
  }

  function handleOnButtonClick() { 
    lightAudio.play()
    gsap.to(onbutton.current.material, { emissiveIntensity: 1.5 })
    gsap.to(jukeboxYellowLights.current.material, { emissiveIntensity: 1.5 })
    gsap.to(jukeboxRedLights.current.material, { emissiveIntensity: 1.5 })
    setTimeout(() => {
      setOnButtonActive(true)
      setZoomed(true)
    }, 750)
  }
  return (<>
    <group {...props} dispose={null} scale={ props.scale } position={ props.position }>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.glass.geometry}
          material={materials.blinn2SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.gold_plate.geometry}
          material={materials.blinn3SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.inner.geometry}
          material={materials.blinn4SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.jukebox_outer.geometry}
          material={materials["Wood Case"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.metal001.geometry}
          material={materials.blinn4SG}
        >
            <meshStandardMaterial 
                roughness={ 0.5 }
                metalness={ 1.0 }
                color={ '#DADADA' }
            />
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.metal002.geometry}
          material={materials.blinn4SG}
        >
            <meshStandardMaterial 
                roughness={ 0.5 }
                metalness={ 1.0 }
                color={ '#DADADA' }
            />
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.metal003.geometry}
          material={materials.blinn4SG}
        >
            <meshStandardMaterial 
                roughness={ 0.5 }
                metalness={ 1.0 }
                color={ '#DADADA' }
            />
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_11.geometry}
          material={materials.blinn4SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_12.geometry}
          material={materials.blinn4SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_12001.geometry}
          material={materials.blinn4SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_13.geometry}
          material={materials.lambert6SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.metal.geometry}
          material={materials.blinn4SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_14.geometry}
          material={materials.lambert7SG}
          ref={ jukeboxYellowLights }
        >
            <meshStandardMaterial 
                emissive={ '#fdde73' }
                emissiveIntensity={ 0.4 }
                toneMapped={ false }
            />
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.red_details.geometry}
        //   material={materials.blinn1SG}
        ref={ jukeboxRedLights }
        >
            <meshStandardMaterial
                useRef={ redDetails }
                emissive={ '#ff0000' }
                emissiveIntensity={ 0.4 }
                toneMapped={ false }
            />

        </mesh>
      </group>
      <mesh
        castShadow
        receiveShadow
        ref={ onbutton }
        geometry={nodes.on_button.geometry}
        material={materials["on-button"]}
        position={[21.768, 12.311, 24.096]}
        onClick={ handleOnButtonClick }
      >
        <meshStandardMaterial 
          emissive={ '#00ff00' }
          emissiveIntensity={ 0.0 }
          toneMapped={ false }
          color={ onButtonActive ? '#00ff00' : '#00ff00' }
        />
    </mesh>
    <mesh
      position={[ 21.768, 11, 24.096 ]}
      scale={[ 10, 11 , 1 ]} 
      visible={ false }
      onPointerOver={() => setHovered(true) }
      onPointerOut={() => setHovered(false) }
      onClick={() => {
        console.log('nvisib')
      }}
    >
      <boxGeometry />

    </mesh>
    <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel.geometry}
        material={materials.EmptyButton}
        position={[-5.286, 30.003, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel012.geometry}
        material={materials.EmptyButton}
        position={[-5.286, 28.33, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel001.geometry}
        material={materials.EmptyButton}
        position={[-5.286, 26.825, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel013.geometry}
        material={materials.EmptyButton}
        position={[-5.286, 25.204, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel014.geometry}
        material={materials.EmptyButton}
        position={[-5.286, 23.557, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel015.geometry}
        material={materials.EmptyButton}
        position={[-5.286, 21.962, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel002.geometry}
        material={materials["SoundsLikeTheRadio.001"]}
        position={[4.643, 30.003, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel003.geometry}
        material={materials.TheresThesun}
        position={[4.643, 28.33, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel004.geometry}
        material={materials.ColdBeerAndCountryMusic}
        position={[4.643, 26.825, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel005.geometry}
        material={materials.BadLuck}
        position={[4.643, 25.204, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel016.geometry}
        material={materials.BackToYou}
        position={[4.643, 23.557, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel017.geometry}
        material={materials.JustaJonsin}
        position={[4.643, 21.962, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button.geometry}
        position={[-10.375, 29.976, 25.458]}
        rotation={[1.493, 0, 0]}
        onPointerOver={() => setHovered(true) }
        onPointerOut={() => setHovered(false) }
        ref={ songButton1 }
        onClick={ () => handleSongButtonClick(1)}
      >
          <meshStandardMaterial 
            emissive={ '#ff0000' }
            emissiveIntensity={ 0.0 }
            toneMapped={ false }
            color={ songButton1Active ? '#C23827' : '#ff0000' }
          />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button001.geometry}
        material={materials.blinn1SG}
        position={[-10.375, 28.309, 25.572]}
        rotation={[1.499, 0, 0]}
        onPointerOver={() => setHovered(true) }
        onPointerOut={() => setHovered(false) }
        ref={ songButton2 }
        onClick={ () => handleSongButtonClick(2)}
        >
        <meshStandardMaterial 
            emissive={ '#ff0000' }
            emissiveIntensity={ 0.0 }
            toneMapped={ false }
            color={ songButton2Active ? '#C23827' : '#ff0000' }
          />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button002.geometry}
        material={materials.blinn1SG}
        position={[-10.382, 26.854, 25.685]}
        rotation={[1.49, 0, 0]}
        onPointerOver={() => setHovered(true) }
        onPointerOut={() => setHovered(false) }
        ref={ songButton3 }
        onClick={ () => handleSongButtonClick(3)}
        >
          <meshStandardMaterial 
            emissive={ '#ff0000' }
            emissiveIntensity={ 0.0 }
            toneMapped={ false }
            color={ songButton3Active ? '#C23827' : '#ff0000' }
          />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button003.geometry}
        material={materials.blinn1SG}
        position={[-10.408, 25.172, 25.816]}
        rotation={[1.49, 0, 0]}
        onPointerOver={() => setHovered(true) }
        onPointerOut={() => setHovered(false) }
        ref={ songButton4 }
        onClick={ () => handleSongButtonClick(4)}
        >
          <meshStandardMaterial 
              emissive={ '#ff0000' }
              emissiveIntensity={ 0.0 }
              toneMapped={ false }
              color={ songButton4Active ? '#C23827' : '#ff0000' }
          />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button005.geometry}
        material={materials.blinn1SG}
        position={[-10.388, 23.657, 25.925]}
        rotation={[1.493, 0, 0]}
        onPointerOver={() => setHovered(true) }
        onPointerOut={() => setHovered(false) }
        ref={ songButton5 }
        onClick={ () => handleSongButtonClick(5)}
        >
        <meshStandardMaterial 
            emissive={ '#ff0000' }
            emissiveIntensity={ 0.0 }
            toneMapped={ false }
            color={ songButton5Active ? '#C23827' : '#ff0000' }
        />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button006.geometry}
        material={materials.blinn1SG}
        position={[-10.388, 21.975, 26.055]}
        rotation={[1.483, 0, 0]}
        onPointerOver={() => setHovered(true) }
        onPointerOut={() => setHovered(false) }
        ref={ songButton6 }
        onClick={ () => handleSongButtonClick(6)}
        >
        <meshStandardMaterial 
            emissive={ '#ff0000' }
            emissiveIntensity={ 0.0 }
            toneMapped={ false }
            color={ songButton6Active ? '#C23827' : '#ff0000' }
        />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button004.geometry}
        material={materials.blinn1SG}
        position={[10.376, 29.976, 25.458]}
        rotation={[1.493, 0, 0]}
        onPointerOver={() => setHovered(true) }
        onPointerOut={() => setHovered(false) }
        ref={ songButton7 }
        onClick={ () => handleSongButtonClick(7)}
        >
        <meshStandardMaterial 
            emissive={ '#ff0000' }
            emissiveIntensity={ 0.0 }
            toneMapped={ false }
            color={ songButton7Active ? '#C23827' : '#ff0000' }
        />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button007.geometry}
        material={materials.blinn1SG}
        position={[10.376, 28.309, 25.572]}
        rotation={[1.499, 0, 0]}
        onPointerOver={() => setHovered(true) }
        onPointerOut={() => setHovered(false) }
        ref={ songButton8 }
        onClick={ () => handleSongButtonClick(8)}
        >
        <meshStandardMaterial 
            emissive={ '#ff0000' }
            emissiveIntensity={ 0.0 }
            toneMapped={ false }
            color={ songButton8Active ? '#C23827' : '#ff0000' }
        />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button008.geometry}
        material={materials.blinn1SG}
        position={[10.369, 26.854, 25.685]}
        rotation={[1.49, 0, 0]}
        onPointerOver={() => setHovered(true) }
        onPointerOut={() => setHovered(false) }
        ref={ songButton9 }
        onClick={ () => handleSongButtonClick(9)}
        >
        <meshStandardMaterial 
            emissive={ '#ff0000' }
            emissiveIntensity={ 0.0 }
            toneMapped={ false }
            color={ songButton9Active ? '#C23827' : '#ff0000' }
        />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button009.geometry}
        material={materials.blinn1SG}
        position={[10.343, 25.172, 25.816]}
        rotation={[1.49, 0, 0]}
        onPointerOver={() => setHovered(true) }
        onPointerOut={() => setHovered(false) }
        ref={ songButton10 }
        onClick={ () => handleSongButtonClick(10)}
        >
        <meshStandardMaterial 
            emissive={ '#ff0000' }
            emissiveIntensity={ 0.0 }
            toneMapped={ false }
            color={ songButton10Active ? '#C23827' : '#ff0000' }
        />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button010.geometry}
        material={materials.blinn1SG}
        position={[10.363, 23.657, 25.925]}
        rotation={[1.493, 0, 0]}
        onPointerOver={() => setHovered(true) }
        onPointerOut={() => setHovered(false) }
        ref={ songButton11 }
        onClick={ () => handleSongButtonClick(11)}
        >
        <meshStandardMaterial 
            emissive={ '#ff0000' }
            emissiveIntensity={ 0.0 }
            toneMapped={ false }
            color={ songButton11Active ? '#C23827' : '#ff0000' }
        />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button011.geometry}
        material={materials.blinn1SG}
        position={[10.363, 21.975, 26.055]}
        rotation={[1.483, 0, 0]}
        onPointerOver={() => setHovered(true) }
        onPointerOut={() => setHovered(false) }
        ref={ songButton12 }
        onClick={ () => handleSongButtonClick(12)}
        >
        <meshStandardMaterial 
            emissive={ '#ff0000' }
            emissiveIntensity={ 0.0 }
            toneMapped={ false }
            color={ songButton12Active ? '#C23827' : '#ff0000' }
        />
      </mesh>
      { isMobileDevice &&
        <>
          <group position={[-4.837, 19.461, 25.297]} 
            onClick={ () => {
                setActivePanel('right')
                buttonAudio.play()
            } }
            ref={ leftNavButton }
            >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Cube_1.geometry}
              material={materials.ArrowButtonOne}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Cube_2.geometry}
              material={materials["Arrow Color"]}
            />
          </group>
          <group position={[5.605, 19.461, 25.297]}
            onClick={ () => { 
                setActivePanel('left')
                buttonAudio.play()
            }}
            // ref={ rightNavButton }
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Cube004.geometry}
              material={materials.ArrowButtonOne}
              // ref={ leftNavButton }
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Cube004_1.geometry}
              material={materials["Arrow Color"]}
            />
          </group>
        </>
      }
    </group>
        </>
  );
}

useGLTF.preload("./jukebox-v4.glb");