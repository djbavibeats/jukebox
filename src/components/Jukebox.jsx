/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useState, useEffect, useRef } from "react"
import { useGLTF } from "@react-three/drei"

export default function Jukebox(props) {
  const { nodes, materials } = useGLTF("./jukebox-v2.glb")
  const [ hovered, setHovered ] = useState(false)
  const onbutton = useRef()
  const redDetails = useRef()

    useEffect(() => {
        document.body.style.cursor = hovered ? 'pointer' : 'auto' 
    }, [hovered])

  function handleOnButtonClick() { 
    alert('turn on the jukebox!')
  }
  return (
    <group {...props} dispose={null} scale={ props.scale } position={ props.position }>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.glass.geometry}
          material={materials.blinn2SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.gold_plate.geometry}
          material={materials.blinn3SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.inner.geometry}
          material={materials.blinn4SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.jukebox_outer.geometry}
          material={materials["Wood Case"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.metal001.geometry}
          material={materials.blinn4SG}
        >
            <meshStandardMaterial 
                roughness={ 0.5 }
                metalness={ 1.0 }
                color={ '#DADADA' }
            />
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.metal002.geometry}
          material={materials.blinn4SG}
        >
            <meshStandardMaterial 
                roughness={ 0.5 }
                metalness={ 1.0 }
                color={ '#DADADA' }
            />
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.metal003.geometry}
          material={materials.blinn4SG}
        >
            <meshStandardMaterial 
                roughness={ 0.5 }
                metalness={ 1.0 }
                color={ '#DADADA' }
            />
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_11.geometry}
          material={materials.blinn4SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_12.geometry}
          material={materials.blinn4SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_12001.geometry}
          material={materials.blinn4SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_13.geometry}
          material={materials.lambert6SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.metal.geometry}
          material={materials.blinn4SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_14.geometry}
          material={materials.lambert7SG}
        >
            <meshStandardMaterial 
                emissive={ '#fdde73' }
                emissiveIntensity={ 0.9 }
                toneMapped={ false }
            />
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.red_details.geometry}
        //   material={materials.blinn1SG}
        >
            <meshStandardMaterial
                useRef={ redDetails }
                emissive={ '#ff0000' }
                emissiveIntensity={ 1.5 }
                toneMapped={ false }
            />

        </mesh>
      </group>
      <mesh
        castShadow
        receiveShadow
        ref={ onbutton }
        geometry={nodes.on_button.geometry}
        material={materials["on-button"]}
        position={[21.768, 12.311, 24.096]}
        onPointerOver={() => setHovered(true) }
        onPointerOut={() => setHovered(false) }
        onClick={ handleOnButtonClick }
      >
        <meshStandardMaterial
            emissive={ '#00ff00' }
            emissiveIntensity={ 1.5 }
            toneMapped={ false }
        />
    </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel.geometry}
        material={nodes.song_panel.material}
        position={[-5.286, 30.003, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel001.geometry}
        material={nodes.song_panel001.material}
        position={[-5.286, 28.336, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel002.geometry}
        material={nodes.song_panel002.material}
        position={[-5.286, 26.809, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel003.geometry}
        material={nodes.song_panel003.material}
        
        position={[-5.286, 25.194, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel004.geometry}
        material={nodes.song_panel004.material}
        position={[-5.286, 23.601, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel005.geometry}
        material={nodes.song_panel005.material}
        position={[-5.286, 22.008, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel006.geometry}
        material={nodes.song_panel006.material}
        position={[4.643, 30.003, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel007.geometry}
        material={nodes.song_panel007.material}
        position={[4.643, 28.336, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel008.geometry}
        material={nodes.song_panel008.material}
        position={[4.643, 26.809, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel009.geometry}
        material={nodes.song_panel009.material}
        position={[4.643, 25.194, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel010.geometry}
        material={nodes.song_panel010.material}
        position={[4.643, 23.601, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_panel011.geometry}
        material={nodes.song_panel011.material}
        position={[4.643, 22.008, 24.18]}
        rotation={[-0.529, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button.geometry}
        material={materials.blinn1SG}
        position={[-10.375, 29.976, 25.458]}
        rotation={[1.493, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button001.geometry}
        material={materials.blinn1SG}
        position={[-10.375, 28.309, 25.572]}
        rotation={[1.499, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button002.geometry}
        material={materials.blinn1SG}
        position={[-10.382, 26.854, 25.685]}
        rotation={[1.49, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button003.geometry}
        material={materials.blinn1SG}
        position={[-10.408, 25.172, 25.816]}
        rotation={[1.49, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button005.geometry}
        material={materials.blinn1SG}
        position={[-10.388, 23.657, 25.925]}
        rotation={[1.493, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button006.geometry}
        material={materials.blinn1SG}
        position={[-10.388, 21.975, 26.055]}
        rotation={[1.483, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button004.geometry}
        material={materials.blinn1SG}
        position={[10.376, 29.976, 25.458]}
        rotation={[1.493, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button007.geometry}
        material={materials.blinn1SG}
        position={[10.376, 28.309, 25.572]}
        rotation={[1.499, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button008.geometry}
        material={materials.blinn1SG}
        position={[10.369, 26.854, 25.685]}
        rotation={[1.49, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button009.geometry}
        material={materials.blinn1SG}
        position={[10.343, 25.172, 25.816]}
        rotation={[1.49, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button010.geometry}
        material={materials.blinn1SG}
        position={[10.363, 23.657, 25.925]}
        rotation={[1.493, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.song_button011.geometry}
        material={materials.blinn1SG}
        position={[10.363, 21.975, 26.055]}
        rotation={[1.483, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("./jukebox-v2.glb");